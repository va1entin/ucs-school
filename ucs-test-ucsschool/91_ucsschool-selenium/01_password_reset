#!/usr/share/ucs-test/runner /usr/share/ucs-test/selenium
# -*- coding: utf-8 -*-
## desc: Test the password reset module
## roles: [domaincontroller_master]
## tags: [apptest,ucsschool,ucsschool_selenium]
## exposure: dangerous
## packages:
##   - ucs-school-master | ucs-school-singlemaster

import univention.testing.ucsschool as utu
from univention.testing import selenium
from univention.admin import localization

translator = localization.translation('ucs-test-selenium')
_ = translator.translate


class UMCTester(object):

	def test_umc(self):
		with utu.UCSTestSchool() as schoolenv:
			reset_password = 'univention'
			schoolname, schooldn = schoolenv.create_ou()
			username, userdn = schoolenv.create_user(schoolname)

			# Reset password for user
			self.selenium.do_login()
			self.selenium.open_module(_('Passwords (students)'))
			self.selenium.click_grid_entry(username)
			self.selenium.click_button(_('Reset password'))
			self.selenium.click_text(_('User has to change password on next login'))
			self.selenium.enter_input('newPassword', reset_password)
			self.selenium.click_button('Reset')
			self.selenium.end_umc_session()
			self.selenium.do_login(username=username, password=reset_password)
			self.selenium.end_umc_session()

			# Reset password for user and require password reset
			self.selenium.do_login()
			self.selenium.open_module(_('Passwords (students)'))
			self.selenium.click_grid_entry(username)
			self.selenium.click_button(_('Reset password'))
			self.selenium.enter_input('newPassword', reset_password)
			self.selenium.click_button('Reset')
			self.selenium.end_umc_session()
			self.selenium.open_side_menu()
			self.selenium.click_text(_('Login'))
			self.selenium.enter_input('username', username)
			self.selenium.enter_input('password', reset_password)
			self.selenium.submit_input('password')
			self.selenium.wait_for_any_text_in_list([_('Set password'), _('Login')], timeout=10)

			# TODO: Test for the proper separation of users regarding schools and working groups?



if __name__ == '__main__':
	with selenium.UMCSeleniumTest() as s:
		umc_tester = UMCTester()
		umc_tester.selenium = s

		umc_tester.test_umc()
