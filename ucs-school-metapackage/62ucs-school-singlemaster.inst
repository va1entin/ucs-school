#!/bin/bash
#
# UCS@school
#  join script
#
# Copyright 2011-2019 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

## joinscript api: bindpwdfile

VERSION=4
. /usr/share/univention-join/joinscripthelper.lib
joinscript_init

eval "$(ucr shell)"
. /usr/share/univention-lib/all.sh

append_ucr_policy_to_base() {
	local policy_dn_list
	local policy_dn
	local ldif
	local tmp_ucr_policy_dn
	local tmp_str
	local policy_name
	local ucr_policy_base
	local key
	local key_hex
	local value
	local target_ucr_policy_dn

	key="${1?append_ucr_policy: Key missing}"
	value="${2?append_ucr_policy: Value missing}"
	shift 2

	key_hex=$(python -c "print '$key'.encode('hex')")

	policy_dn_list=$(univention-directory-manager container/dc list "$@" \
		--dn "$ldap_base" | sed -n 's/^\s*univentionPolicyReference: //p')

	while read policy_dn; do
		ldif=$(univention-ldapsearch -LLL -b "$policy_dn" -s base \
			"(objectClass=univentionPolicyRegistry)" \
			univentionRegistry \
			| ldapsearch-wrapper
		)
		tmp_ucr_policy_dn=$(sed -n 's/^dn: //p' <<<"$ldif")

		if [ -z "$target_ucr_policy_dn" ]; then
			target_ucr_policy_dn="$tmp_ucr_policy_dn"
		else
			echo "WARNING: More than one UCR policies registered at $ldap_base"
		fi

		if [ -n "$tmp_ucr_policy_dn" ]; then
			while read tmp_str; do
				if [ "$tmp_str" = "$key_hex" ]; then
					echo "INFO: UCR key $key already present at '$tmp_ucr_policy_dn'"
					target_ucr_policy_dn="$tmp_ucr_policy_dn"
					break 2
				fi
			done < <(sed -rn 's/^univentionRegistry;entry-hex-([^:]+): .*/\1/p' <<<"$ldif")
		fi
	done <<<"$policy_dn_list"

	if [ -n "$target_ucr_policy_dn" ]; then
		univention-directory-manager policies/registry modify "$@" \
			--dn "$target_ucr_policy_dn" \
			--append registry="$key $value" 
	else
		policy_name="ucsschool-ucr-settings"
		ucr_policy_base="cn=config-registry,cn=policies,$ldap_base"
		univention-directory-manager policies/registry create --ignore_exists "$@" \
			--position "$ucr_policy_base" \
			--set name="$policy_name" \
			--set registry="$key $value" 

		univention-directory-manager container/dc modify "$@" \
			--dn "$ldap_base" \
			--policy-reference "cn=$policy_name,$ucr_policy_base"
	fi
}

if [ $JS_LAST_EXECUTED_VERSION -lt 3 ] ; then
	if [ -x /etc/init.d/slapd ] &&
		   [ -x /usr/share/univention-ldap/ldap_setup_index ] &&
		   [ -e /var/univention-join/joined ] &&
		   univention-ldapsearch -LLL -o ldif-wrap=no -b cn=Subschema -s base attributeTypes | grep -Fq "NAME 'ucsschoolSchool'" &&
		   univention-ldapsearch -LLL -o ldif-wrap=no -b cn=Subschema -s base attributeTypes | grep -Fq "NAME 'ucsschoolSourceUID'" &&
		   univention-ldapsearch -LLL -o ldif-wrap=no -b cn=Subschema -s base attributeTypes | grep -Fq "NAME 'ucsschoolRecordUID'"
	then
		echo "Updating LDAP indices..."
		unset stop_and_start_slapd
		pidof slapd >/dev/null 2>/dev/null && stop_and_start_slapd=yes
		[ -n "$stop_and_start_slapd" ] && invoke-rc.d slapd stop
		/usr/share/univention-ldap/ldap_setup_index \
			--verbose \
			--add-eq ucsschoolSchool --add-eq ucsschoolSourceUID --add-eq ucsschoolRecordUID \
			--add-pres ucsschoolSchool --add-pres ucsschoolSourceUID --add-pres ucsschoolRecordUID \
			--add-sub ucsschoolRecordUID || die
		[ -n "$stop_and_start_slapd" ] && invoke-rc.d slapd start
	else
		echo "ERROR: cannot update LDAP indices (ldap server not running?) - stopping here"
		exit 1
	fi
fi

# create dhcp dns policies for all local OUs (Bug #31930)
if is_ucr_true "ucsschool/import/generate/policy/dhcp/dns/set_per_ou" ; then
	IFS="
"
	# determine list of available OUs
	for oudn in $(univention-ldapsearch -LLL -b "$ldap_base" 'objectClass=ucsschoolOrganizationalUnit' dn | ldapsearch-wrapper | sed -nre 's/^dn: //p') ; do
		ouname="$(echo "$oudn" | sed -nre 's/ou=([^,]*),(ou=|dc=).*/\1/p')"
		if [ -z "$ouname" ] ; then
			echo "Cannot determine OU name - using fallback 'server'"
			ouname="server"
		fi
		# create dhcp dns policy if missing
		udm policies/dhcp_dns create "$@" --ignore_exists \
			--position "cn=policies,$oudn" \
			--set name="dhcp-dns-$ouname" \
			--set domain_name_servers="$(get_default_ip_address)" \
			--set domain_name="$domainname"
		# assign dhcp dns policy to dhcp container if missing
		udm container/cn modify "$@" \
			--dn "cn=dhcp,$oudn" \
			--policy-reference "cn=dhcp-dns-${ouname},cn=policies,$oudn" || true
	done
fi

append_ucr_policy_to_base directory/manager/samba3/legacy yes "$@"
if [ $JS_LAST_EXECUTED_VERSION = 1 ]; then
	append_ucr_policy_to_base ucsschool/import/roleshare no "$@"
fi

ucs_addServiceToLocalhost 'UCS@school' "$@"
ucs_addServiceToLocalhost 'UCS@school Education' "$@"

systemctl try-restart univention-s4-connector.service || true

if is_ucr_true "ucsschool/join/create_demo"; then
	makepasswd --chars 16 > /etc/demoschool.secret
	chmod 640 /etc/demoschool.secret
	python /usr/share/ucs-school-metapackage/scripts/create_demoportal.py
	univention-config-registry set ucsschool/join/create_demo=no
fi

joinscript_save_current_version

exit 0
